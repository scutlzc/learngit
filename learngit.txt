git init 初始化仓库，新建了一个.git文件。
git add<file> 添加文件到Git仓库，可以反复多次使用，添加多个文件
git commit -m<message>
git status 查看工作区的状态
git diff可以 查看修改的内容
git log 可以查看提交的历史，以确定要回退到哪个版本

HEAD指向的版本就是当前版本，使用git reset --hard commit_id可以在不同版本间穿梭。
HEAD^表示上一个版本，HEAD^^表示上上一个版本，HEAD~100表示往上100个版本。
git reflog 可以查看命令历史，以确定回到哪个版本

在工作区中存在一个隐藏目录.git，是Git的版本库。
其中存放了很多东西，最重要的是称为stage（或index）的暂存区，还有Git为我们自动创建的第一个分支master，以及指向master的第一个指针HEAD。
git add将文件添加到暂存区，git commit将暂存区中内容提交到当前分支。
git diff 查看工作区和暂存区之间的差异，git diff -cached 查看暂存区和仓库的差异。git diff HEAD --filename 查看工作区和版本库最新版本的区别。
git checkout 撤销对工作区的更改，将暂存区最新的版本转移到工作区。

git remote add orgin git https://github.com/scutlzc/learngit.git 将已有的本地仓库与远程仓库关联起来。
git push -u origin master 将master分支推送到远程库。
当远程库为空，加上-u参数，Git不但会把本地master分支内容推送到远程新的master分支，还会把本地master分支和远程master分支关联起来。
之后可以用git push origin master 推送最新修改。
git clone git@github.com:scutlzc/repositoryname.git将远程库克隆出一个本地库。

git branch branchname 创建一个分支，git checkout branchname 切换到这个分支
可以用git checkout -b branchname 创建新分支的同时，切换到这个分支上。
git branch 查看当前分支，会列出所有分支，当前分支前标有*号。